{"meta":{"title":"Chance Li 的博客","subtitle":null,"description":null,"author":"Chance Li","url":"http://www.ilmadyna.com"},"pages":[{"title":"关于","date":"2018-05-12T00:50:54.410Z","updated":"2018-05-11T08:43:46.357Z","comments":false,"path":"about/index.html","permalink":"http://www.ilmadyna.com/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"书单","date":"2018-05-12T00:50:54.425Z","updated":"2018-05-11T08:43:46.357Z","comments":false,"path":"books/index.html","permalink":"http://www.ilmadyna.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-05-12T00:50:54.439Z","updated":"2018-05-11T08:43:46.357Z","comments":false,"path":"categories/index.html","permalink":"http://www.ilmadyna.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-05-12T00:50:54.453Z","updated":"2018-05-11T08:43:46.357Z","comments":true,"path":"links/index.html","permalink":"http://www.ilmadyna.com/links/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2018-05-12T00:50:54.466Z","updated":"2018-05-11T08:43:46.358Z","comments":false,"path":"repository/index.html","permalink":"http://www.ilmadyna.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-05-12T00:50:54.480Z","updated":"2018-05-11T08:43:46.358Z","comments":false,"path":"tags/index.html","permalink":"http://www.ilmadyna.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"文章标题","slug":"hello-world","date":"2018-05-11T08:38:10.684Z","updated":"2018-05-11T08:48:01.978Z","comments":true,"path":"2018/05/11/hello-world/","link":"","permalink":"http://www.ilmadyna.com/2018/05/11/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"文章分类","slug":"文章分类","permalink":"http://www.ilmadyna.com/categories/文章分类/"}],"tags":[{"name":"文章标签","slug":"文章标签","permalink":"http://www.ilmadyna.com/tags/文章标签/"}]},{"title":"数据分析之关联规则案例","slug":"关联规则案例","date":"2018-05-10T09:02:55.157Z","updated":"2018-05-12T07:10:59.096Z","comments":true,"path":"2018/05/10/关联规则案例/","link":"","permalink":"http://www.ilmadyna.com/2018/05/10/关联规则案例/","excerpt":"","text":"加载数据集这里我们选择使用Groceries数据集进行案例分析，该数据集是某一食品杂货店一个月的真实交易记录，每一行代表一笔交易所购买的产品。 数据查看与筛选R语言中自带一些函数如summary，size，dim，colnames等可以大概查看交易数据集groceries的基本概况1summary(groceries) 运行结果的含义: 第一段:总共有9835条交易记录transaction，169个商品item。density=0.026表示在稀疏矩阵中1的占比。 第二段:最频繁出现的商品item，以及其出现的次数。可以计算出最大支持度。 第三段:每笔交易包含的商品数目，以及其对应的5个分位数和均值的 统计信息。如:2159条交易仅包含了1个商品，1643条交易购买了2件商品，一条交易购买了32件商品。那段统计信息的含义是:第一分位数是2，意味着25%的交易包含不超过2个item。中位数是3表明50%的 交易购买的商品不超过3件。均值4.4表示所有的交易平均购买4.4件商品。 第四段:如果数据集包含除了Transaction Id和Item之外的其他的列(如，发生交易的时间，用户ID等等)，会显示在这里。这个例子，其实没有新的列，labels就是item的名字。 若要查看每个transaction包含item的数目basketSize，使用size()函数 若是计算每个item的支持度(占比)itemFreq，使用 itemFrequency()函数 若要计算每个item出现的次数itemCount，则需要利用公式转化:由支持度计算公式Support(X) = Xs / N( N是总的交易数，Xs就是Item X的count)得， Xs = Support(X) N = itemFreq(sum(basketSize)/sum(itemFreq)) 若想查看每条购物记录中item大于指定次数的记录(只关心购买3件及以上商品的交易)，可采用如下方式过滤筛选:1groceries_use &lt;- groceries[basketSize &gt; 2] 可以采用直观的图像展示界面显示item的support值,函数如下1itemFrequencyPlot(groceries, support=0.1) #支持度大于0.1的item 1itemFrequencyPlot(groceries, topN=10, horiz=T) #支持度前10的item arules自带的inspect函数可以查看具体的数据细节问题1inspect(groceries[1:5]) #前5行数据 可以通过图形更直观观测数据的稀疏情况，一个点代表在某个transaction上购买了item。1image(groceries[1:100]) #前100行数据的展示 当数据集很大的时候，这张稀疏矩阵图是很难展现的，一般可以用sample函数进行采样显示。1image(sample(groceries,100)) #sample函数随机抽取100行数据展示 这个矩阵图虽然看上去没有包含很多信息，但是它对于直观地发现异常数据或者比较特殊的Pattern很有效。比如，某些item几乎每个transaction都会买。 比如，圣诞节都会买糖果礼物。那么在这幅图上会在糖果这一列上，显示一根竖线。 关联规则挖掘首先，我们尝试对apriori()函数以最少的限制，来观察它可以反馈给我们那些信息，再以此决定下一步操作。这里先将支 持度的最小阈值(minsup)设置为0.001，置信度最小阈值 (minconf)设为0.5，minlen=2，其他参数不进行设置取默认值，并将关联规则命名为rules0。 初探数据使用summary函数可以查看规则的汇总信息，其输出结果分为四部分。 第一部分:规则的总数(5668) 第二部分:规则的长度分布，即minlen到maxlen之间的分布。如上例，len=2有11条规则，len=3有1461条，……，len=6有46条。同时显示了rule length的五数分布+均值。 第三部分:quality measure的统计信息(支持度、置信度、提升度、支持度计数)。 第四部分:挖掘的相关信息(数据集、行数、最小支持度、最小置信度)。使用inpect函数可以查看具体的规则。 rules0包含5668条关联规则，可以想象，若将如此大量的关联规则全部输出是没有意义的。仔细观察每条规则，发现关联规则的先后顺序与可以表明其关联性的三个参数值( support、confidence、lift，count 与support均表示支持度)的取值大小没有明显关系。 面对杂乱无章的大量信息，我们无法快速获取如关联性最强等重要信息。因此，可以考虑选择生成其中关联性较强的若干条规则。 规则评估与强度控制规则可以划分为3大类: Actionable(可操作的) 这些rule提供了非常清晰、有用的洞察，可以直接应用在业务上。 Trivial(微不足道的) 这些rule显而易见，很清晰但是没啥用。属于common sense，如{尿布} =&gt; {婴儿食品}。 Inexplicable(费解的) 这些rule是不清晰的，难以解释，需要额外的研究来判定是否是有用的rule。接下来，我们讨论如何发现有用的rule。 最常用的方法是通过支持度或(和)置信度的值来实现规则控制，往往是一个不断调整的过程。最终关联规则的规模大小或者说强度高低，是根据使用者的需要决定的。但需要知道，如果阈值设置较高，容易丢失有 用信息，设置较低，则会生成大量规则。 一般地，我们有两种调整方式: 一是先使用默认参数(支持度为0.1，置信度为0.8)生成规则，然后进一步调整 二是将阈值设定很低(如rules0)，然后逐步提高阈值，直至获得设想的规则规模或强度。 通过支持度与置信度共同控制将支持度提高至0.005，置信度从0.5逐渐提高至0.64:12345rules1 &lt;- apriori(groceries, parameter = list(support =0.005,confidence = 0.5,minlen = 2))rules2 &lt;- apriori(groceries, parameter = list(support =0.005,confidence = 0.6,minlen = 2))rules3 &lt;- apriori(groceries, parameter = list(support =0.005,confidence = 0.64,minlen = 2))rules3 #显示rules3中生成关联规则条数inspect(rules3) 在两参数共同调整的过程中，如果更关注关联规则项集在总体中所占比例，则可以适当多提高支持度的值;若更注重规则本身可靠性，则可以多提高一些置信度的值。 主要通过支持度来控制也可以采取对其中一个指标给予固定阈值，再按照其他指标来选择TOP N关联规则。例如我们需要保证置信度最低为0.5，则支持度前5强的关联规则为:12rules.sorted_sup &lt;- sort(rules0,by=&quot;support&quot;) #保证置信度最低为0.5，按支持度排序inspect(rules.sorted_sup[1:5]) #输出rules.sorted_sup的前5强关联规则 主要通过置信度来控制保证支持度最低为0.001，则置信度前5强的关联规则为:12rules.sorted_sup &lt;- sort(rules0,by=&quot;support&quot;) #保证置信度最低为0.5，按支持度排序inspect(rules.sorted_sup[1:5]) #输出rules.sorted_sup的前5强关联规则 输出结果中，5条关联规则的置信度均为100%，表明只要买了关联规则前件中的商品，一定会购买后件中的。 例如第一条关联规则:购买了米和糖的消费者，都购买了全脂牛奶。这就是一条相当有用的关联规则，正如这些食品在超市中往往摆放的很近。 主要通过提升度来控制保证支持度最低为0.001，置信度最低为0.5，按lift值进行升序排序，得前5强的关联规则为:12rules.sorted_lift &lt;- sort(rules0,by=&quot;lift&quot;) #保证支持度最低为0.001，置信度最低为0.5，按置提升度排序inspect(rules.sorted_lift[1:5]) #输出rules.sorted_lift的前5强关联规则 根据前面的理论知识，我们知道，提升度用来表明规则的可靠性，提升度较高的关联规则往往是有用的。输出结果中，{即食食品，苏打水} =&gt;{汉堡肉}是强度最高的关联规则， {苏打水，爆米花} =&gt;{咸味食品}次之。 搜索规则使用subset函数，利用正则表达式，可以搜索特定规则:12yogurtrules &lt;- subset(rules1, items %in% c(&quot;yogurt&quot;))inspect(yogurtrules) %in%是精确匹配 %pin%是部分匹配，也就是说只要item like ‘%A%’ or item like‘%B%’ %ain%是完全匹配，也就是说itemset has ‘B’ and itemset has ‘B’ 同时可以通过 条件运算符(&amp;, |, !) 添加support, confidence, lift的过滤条件。 搜索规则例子:12fruitrules &lt;- subset(rules1, items %pin% c(&quot;fruit&quot;)) #搜索名称中含有“fruit”的规则-部分匹配inspect(fruitrules) 12byrules &lt;- subset(rules0, items %ain% c(&quot;berries&quot;, &quot;yogurt&quot;)) #搜索 含有“浆果”和“酸奶”的规则-完全匹配inspect(byrules) 12fruitrules1 &lt;- subset(rules1, items %pin% c(&quot;fruit&quot;) &amp; lift &gt; 3) #搜索 名称中含有“fruit”且提升度大于3的规则inspect(fruitrules1) 限制挖掘的item超市中经常出现两种商品捆绑销售的情况，这可能是商家想要促销其中某种商品。如何捆绑能够促进销量?也可以根据关联规则给出建议。 例如我们需要促销比较冷门的商品——芥末(mustard)，可 以通过设置参数appearance来控制规则的关联结果(rhs)为 “mustard”，搜索规则中仅包含mustard的关联规则，从而有效找到其强关联商品，来作为捆绑商品，但尽量要放低支持度和置信度。 代码如下:123rules4 &lt;- apriori(groceries, parameter = list( support = 0.001,confidence = 0.1, maxlen=2 ), appearance = list(rhs = c(&quot;mustard&quot;),default=&quot;lhs&quot;))#仅生成关联结果中含有“芥末”的关联规则inspect(rules4) 之所以设置maxlen=2，是因为实际情形中，我们一般仅将两种商品进行捆绑，而不是一堆商品。结果显示蛋黄酱(mayonnaise)是芥末(mustard)的强关联商品，因此我们考虑将它们捆绑起来摆放在货架上，并制定一个合适的捆绑价格。 关联规则可视化12rules5 &lt;- apriori(groceries, parameter = list( support = 0.002, confidence = 0.5)) #生成关联规则rules5 #显示rules5生成关联规则条数 1plot(rules5) #对rules5作散点图 程序运行所得图中，每个点对应于相应的支持度和置信度值， 分别由图中的横纵坐标轴显示，且其中关联规则点的颜色深浅由lift值得高低决定 另外也可以通过更改参数设置，来改变横纵轴及颜色对应的变量，如:1plot(rules5,measure=c(&quot;support&quot;,&quot;lift&quot;),shading=&quot;confidence&quot;) #更改坐标轴以及颜色渐变变量 从图中，我们可以清楚地发现以下信息: 大部分规则的support在0.1以内，Confidence在0.5-0.8内。 提升度较高的关联规则的支持度往往较低 置信度与支持度具有明显反相关性 1plot(rules5,interactive = T) #互动散点图 另外，还可以将shading参数设置为“order”来绘制出一种特殊的散点图——Two-key图。1plot(rules5,shading = &quot;order&quot;,control = list(main = &quot;Two-key plot&quot;)) #Two-key图 该图中横纵轴依旧是支持度与置信度，而关联规则点颜色的深浅则表示其所代表的关联规则中含有商品的多少，商品种类越多，点的颜色越深。 将图形类型改为“grouped”可生成组合矩阵图。1plot(rules5,method = &quot;grouped&quot;) #组合矩阵图 图中，圆点矩阵的横轴表示关联规则的前件(lhs)，纵轴表示后件(rhs)，圆点颜色越深，表示关联规则提升度(lift) 越大 圆点尺寸越大，表示关联规则支持度越高12rules5_sup &lt;- sort(rules5,by=&quot;support&quot;)inspect(rules5_sup[1:5]) 12rules5_lift &lt;- sort(rules5,by=&quot;lift&quot;)inspect(rules5_lift[1:5]) 将图形类型改为“graph”可生成关联规则图1plot(rules3, measure=&quot;confidence&quot;,method=&quot;graph&quot;,shading = &quot;lift&quot;) #关联规则图 图中，每个圆点代表一条关联规则，箭头方向标明了关联规则的lhs与rhs 1inspect(rules3)","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://www.ilmadyna.com/categories/数据分析/"},{"name":"R","slug":"数据分析/R","permalink":"http://www.ilmadyna.com/categories/数据分析/R/"},{"name":"关联规则","slug":"数据分析/R/关联规则","permalink":"http://www.ilmadyna.com/categories/数据分析/R/关联规则/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"http://www.ilmadyna.com/tags/数据分析/"},{"name":"R","slug":"R","permalink":"http://www.ilmadyna.com/tags/R/"},{"name":"关联规则","slug":"关联规则","permalink":"http://www.ilmadyna.com/tags/关联规则/"}]}]}